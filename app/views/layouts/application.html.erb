<!DOCTYPE html>
<html>
  <head>
    <title>Addison Applications</title>

    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>

    <!-- WebGL Styles  -->
<!--     <style type="text/css">
    	#mycanvas {
    		width: 100vw;
    		height: 100vh;
    	}
    </style> -->

    <!-- WebGL Shaders -->
    <!-- vertex shader -->
<!--     <script id="3d-vertex-shader" type="x-shader/x-vertex">
    attribute vec4 a_position;
    attribute vec4 a_color;

    uniform mat4 u_matrix;

    varying vec4 v_color;

    void main() {
      // Multiply the position by the matrix.
      gl_Position = u_matrix * a_position;

      // Pass the color to the fragment shader.
      v_color = a_color;
    }
    </script> -->
    <!-- fragment shader -->
<!--     <script id="3d-fragment-shader" type="x-shader/x-fragment">
    precision mediump float;

    // Passed in from the vertex shader.
    varying vec4 v_color;

    uniform vec4 u_colorMult;

    void main() {
       gl_FragColor = v_color * u_colorMult;
    }
    </script> -->
    <!-- End WebGL Shaders -->

    <!-- Main WebGL Function -->
<!--     <script type="text/javascript">
    	"use strict";

    	function init() {
    	  // Get A WebGL context
    	  /** @type {HTMLCanvasElement} */
    	  var canvas = document.getElementById("mycanvas");
    	  var gl = canvas.getContext("webgl");
    	  if (!gl) {
    	    return;
    	  }

    	  var createFlattenedVertices = function(gl, vertices) {
    	    return webglUtils.createBufferInfoFromArrays(
    	        gl,
    	        primitives.makeRandomVertexColors(
    	            primitives.deindexVertices(vertices),
    	            {
    	              vertsPerColor: 6,
    	              rand: function(ndx, channel) {
    	                return channel < 3 ? ((128 + Math.random() * 128) | 0) : 255;
    	              }
    	            })
    	      );
    	  };

    	  var sphereBufferInfo = createFlattenedVertices(gl, primitives.createSphereVertices(10, 12, 6));
    	  var cubeBufferInfo   = createFlattenedVertices(gl, primitives.createCubeVertices(20));
    	  var coneBufferInfo   = createFlattenedVertices(gl, primitives.createTruncatedConeVertices(10, 0, 20, 12, 1, true, false));

    	  // setup GLSL program
    	  var programInfo = webglUtils.createProgramInfo(gl, ["3d-vertex-shader", "3d-fragment-shader"]);

    	  function degToRad(d) {
    	    return d * Math.PI / 180;
    	  }

    	  var cameraAngleRadians = degToRad(0);
    	  var fieldOfViewRadians = degToRad(60);
    	  var cameraHeight = 50;

    	  // Uniforms for each object.
    	  var sphereUniforms = {
    	    u_colorMult: [0.5, 1, 0.5, 1],
    	    u_matrix: m4.identity(),
    	  };
    	  var cubeUniforms = {
    	    u_colorMult: [1, 0.5, 0.5, 1],
    	    u_matrix: m4.identity(),
    	  };
    	  var coneUniforms = {
    	    u_colorMult: [0.5, 0.5, 1, 1],
    	    u_matrix: m4.identity(),
    	  };
    	  var sphereTranslation = [  0, 0, 0];
    	  var cubeTranslation   = [-40, 0, 0];
    	  var coneTranslation   = [ 40, 0, 0];

    	  function computeMatrix(viewProjectionMatrix, translation, xRotation, yRotation) {
    	    var matrix = m4.translate(viewProjectionMatrix,
    	        translation[0],
    	        translation[1],
    	        translation[2]);
    	    matrix = m4.xRotate(matrix, xRotation);
    	    return m4.yRotate(matrix, yRotation);
    	  }

    	  requestAnimationFrame(drawScene);

    	  // Draw the scene.
    	  function drawScene(time) {
    	    time *= 0.0005;

    	    webglUtils.resizeCanvasToDisplaySize(gl.canvas);

    	    // Tell WebGL how to convert from clip space to pixels
    	    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);

    	    gl.enable(gl.CULL_FACE);
    	    gl.enable(gl.DEPTH_TEST);

    	    // Clear the canvas AND the depth buffer.
    	    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

    	    // Compute the projection matrix
    	    var aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;
    	    var projectionMatrix =
    	        m4.perspective(fieldOfViewRadians, aspect, 1, 2000);

    	    // Compute the camera's matrix using look at.
    	    var cameraPosition = [0, 0, 100];
    	    var target = [0, 0, 0];
    	    var up = [0, 1, 0];
    	    var cameraMatrix = m4.lookAt(cameraPosition, target, up);

    	    // Make a view matrix from the camera matrix.
    	    var viewMatrix = m4.inverse(cameraMatrix);

    	    var viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);

    	    var sphereXRotation =  time;
    	    var sphereYRotation =  time;
    	    var cubeXRotation   = -time;
    	    var cubeYRotation   =  time;
    	    var coneXRotation   =  time;
    	    var coneYRotation   = -time;

    	    // ------ Draw the sphere --------

    	    gl.useProgram(programInfo.program);

    	    // Setup all the needed attributes.
    	    webglUtils.setBuffersAndAttributes(gl, programInfo, sphereBufferInfo);

    	    sphereUniforms.u_matrix = computeMatrix(
    	        viewProjectionMatrix,
    	        sphereTranslation,
    	        sphereXRotation,
    	        sphereYRotation);

    	    // Set the uniforms we just computed
    	    webglUtils.setUniforms(programInfo, sphereUniforms);

    	    gl.drawArrays(gl.TRIANGLES, 0, sphereBufferInfo.numElements);

    	    // ------ Draw the cube --------

    	    // Setup all the needed attributes.
    	    webglUtils.setBuffersAndAttributes(gl, programInfo, cubeBufferInfo);

    	    cubeUniforms.u_matrix = computeMatrix(
    	        viewProjectionMatrix,
    	        cubeTranslation,
    	        cubeXRotation,
    	        cubeYRotation);

    	    // Set the uniforms we just computed
    	    webglUtils.setUniforms(programInfo, cubeUniforms);

    	    gl.drawArrays(gl.TRIANGLES, 0, cubeBufferInfo.numElements);

    	    // ------ Draw the cone --------

    	    // Setup all the needed attributes.
    	    webglUtils.setBuffersAndAttributes(gl, programInfo, coneBufferInfo);

    	    coneUniforms.u_matrix = computeMatrix(
    	        viewProjectionMatrix,
    	        coneTranslation,
    	        coneXRotation,
    	        coneYRotation);

    	    // Set the uniforms we just computed
    	    webglUtils.setUniforms(programInfo, coneUniforms);

    	    gl.drawArrays(gl.TRIANGLES, 0, coneBufferInfo.numElements);

    	    requestAnimationFrame(drawScene);
    	  }
    	}

    </script> -->
    <!-- End Main WebGL Function -->

  </head>

  <body>
    <style type="text/css">

        .logo-container {
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 1s;
            flex-direction: column;
        }

        .svg-logo {
            width: 80vw;
        }

        #logo-path {
            fill: transparent;
            stroke: #009696;
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke-dasharray: 148px;
            stroke-dashoffset: -148px
        }

        .logo-animation {
            animation: animate-logo 2s forwards;
        }

        @keyframes animate-logo {
            0% {stroke-dashoffset: -148px}
            100% {stroke-dashoffset: 0;}
        }

        .contact-link {
            color: #00a0a0;
            text-decoration: none;
            margin-top: 3rem;
            font-size: 36px;
            font-family: Strasua;
        }
    </style>

    <div class="logo-container">

        <svg class="svg-logo" xmlns="http://www.w3.org/2000/svg" viewBox="-1 -2 379 30">
          <path id="logo-path" class="logo-hidden" d="M16.37 1.35c.31-.48.69-.83 1.14-1.04.45-.21.93-.31 1.43-.31.57 0 1.03.2 1.37.61.34.41.51.95.51 1.63v23.69h-4.46V8.55L5.35 25.94H0L16.37 1.35zM23.69 25.94V.2h7.39c1.91 0 3.66.31 5.25.92 1.58.62 2.95 1.48 4.09 2.59 1.14 1.11 2.03 2.44 2.67 3.98.64 1.54.96 3.25.96 5.12 0 1.85-.32 3.58-.97 5.18-.65 1.61-1.55 3-2.69 4.17-1.14 1.18-2.51 2.1-4.11 2.77s-3.33 1.01-5.2 1.01h-7.39zm4.49-21.25v16.76h2.9c1.28 0 2.43-.21 3.46-.63s1.92-1 2.67-1.73c.75-.74 1.32-1.61 1.73-2.62.41-1.01.61-2.11.61-3.3 0-1.21-.21-2.34-.63-3.38-.42-1.04-1-1.94-1.75-2.69a8.178 8.178 0 0 0-2.69-1.77c-1.05-.43-2.18-.64-3.42-.64h-2.88zM46.4 25.94V.2h7.39c1.91 0 3.66.31 5.25.92 1.58.62 2.95 1.48 4.09 2.59 1.14 1.11 2.03 2.44 2.67 3.98.64 1.54.96 3.25.96 5.12 0 1.85-.32 3.58-.97 5.18-.65 1.61-1.55 3-2.69 4.17-1.14 1.18-2.51 2.1-4.11 2.77s-3.33 1.01-5.2 1.01H46.4zm4.49-21.25v16.76h2.9c1.28 0 2.43-.21 3.46-.63s1.92-1 2.67-1.73c.75-.74 1.32-1.61 1.73-2.62.41-1.01.61-2.11.61-3.3 0-1.21-.21-2.34-.63-3.38-.42-1.04-1-1.94-1.75-2.69a8.178 8.178 0 0 0-2.69-1.77c-1.05-.43-2.18-.64-3.42-.64h-2.88zM69.1 25.94V.2h4.49v25.74H69.1zM76.72 25.94v-4.49h9.01c1.39 0 2.53-.33 3.43-.99.9-.66 1.35-1.52 1.35-2.57 0-.53-.12-1.01-.36-1.45a3.58 3.58 0 0 0-.99-1.14c-.42-.32-.92-.57-1.52-.74-.59-.18-1.23-.26-1.91-.26h-2.05c-1.06 0-2.04-.17-2.94-.51-.9-.34-1.68-.82-2.34-1.45a6.745 6.745 0 0 1-1.55-2.21c-.37-.85-.56-1.79-.56-2.82 0-1.01.19-1.95.58-2.81.38-.86.93-1.61 1.63-2.24s1.55-1.14 2.54-1.5c.99-.36 2.08-.54 3.27-.54h8.55v4.49h-8.78c-.95 0-1.69.26-2.24.78-.55.52-.82 1.14-.82 1.86 0 .79.28 1.45.84 1.98.56.53 1.3.79 2.23.79h2.54c1.14 0 2.2.19 3.17.58.97.39 1.8.93 2.51 1.63s1.25 1.54 1.65 2.51c.4.97.59 2.02.59 3.17 0 1.17-.21 2.23-.63 3.2-.42.97-1.02 1.8-1.8 2.51-.78.7-1.71 1.25-2.79 1.65-1.08.4-2.28.59-3.6.59h-9.01zM109.62 25.94c-1.89 0-3.64-.34-5.23-1.01-1.6-.67-2.96-1.6-4.11-2.79a12.727 12.727 0 0 1-2.67-4.18c-.64-1.59-.96-3.32-.96-5.16 0-1.85.31-3.54.94-5.08s1.51-2.87 2.64-3.99c1.13-1.12 2.5-1.99 4.09-2.61 1.6-.62 3.36-.92 5.3-.92h.76c1.96 0 3.73.31 5.33.94 1.59.63 2.96 1.5 4.09 2.62a11.54 11.54 0 0 1 2.62 3.99c.62 1.54.92 3.22.92 5.05 0 1.85-.32 3.57-.96 5.16-.64 1.6-1.53 2.99-2.69 4.18-1.16 1.19-2.52 2.12-4.11 2.79s-3.32 1.01-5.21 1.01h-.75zm0-21.25c-1.23 0-2.37.21-3.4.63-1.03.42-1.93 1-2.69 1.75s-1.35 1.64-1.78 2.67c-.43 1.03-.64 2.18-.64 3.43 0 1.21.21 2.32.63 3.33.42 1.01 1 1.89 1.75 2.62.75.74 1.64 1.31 2.69 1.71 1.04.41 2.19.61 3.45.61h.76c1.28 0 2.44-.21 3.48-.63s1.94-1 2.69-1.73c.75-.74 1.33-1.61 1.73-2.62.41-1.01.61-2.11.61-3.3 0-1.23-.21-2.36-.63-3.4a8.073 8.073 0 0 0-1.77-2.69 7.96 7.96 0 0 0-2.71-1.77c-1.05-.42-2.18-.63-3.42-.63h-.75zM130.12 8.08v17.85h-4.32V2.44c0-.68.19-1.23.56-1.63.37-.41.91-.61 1.62-.61.44 0 .85.09 1.24.28.38.19.78.53 1.17 1.04l12.57 16.53V.2h4.29v23.53c0 1.65-.56 2.47-1.68 2.47-.55 0-1.03-.13-1.45-.38s-.88-.64-1.39-1.17L130.12 8.08zM172.59 1.35c.31-.48.69-.83 1.14-1.04.45-.21.93-.31 1.43-.31.57 0 1.03.2 1.37.61.34.41.51.95.51 1.63v23.69h-4.46V8.55l-11.02 17.39h-5.35l16.38-24.59zM184.4 18.71v7.23h-4.49V.2h8.55c1.47 0 2.79.24 3.96.71s2.16 1.12 2.97 1.95 1.44 1.8 1.88 2.94c.44 1.13.66 2.36.66 3.68 0 1.32-.22 2.55-.66 3.68a8.42 8.42 0 0 1-1.9 2.94c-.83.83-1.82 1.47-2.99 1.93-1.17.46-2.47.69-3.93.69h-4.05zm3.93-4.49c.79 0 1.51-.12 2.16-.36.65-.24 1.21-.58 1.67-1.01.46-.43.82-.94 1.07-1.52.25-.58.38-1.22.38-1.9 0-.68-.13-1.31-.38-1.9-.25-.58-.61-1.09-1.07-1.52a4.72 4.72 0 0 0-1.67-.99c-.65-.23-1.37-.35-2.16-.35h-3.93v9.54h3.93zM204.23 18.71v7.23h-4.49V.2h8.55c1.47 0 2.79.24 3.96.71s2.16 1.12 2.97 1.95c.81.83 1.44 1.8 1.88 2.94.44 1.13.66 2.36.66 3.68 0 1.32-.22 2.55-.66 3.68a8.42 8.42 0 0 1-1.9 2.94c-.83.83-1.82 1.47-2.99 1.93-1.17.46-2.47.69-3.93.69h-4.05zm3.93-4.49c.79 0 1.51-.12 2.16-.36.65-.24 1.21-.58 1.67-1.01s.82-.94 1.07-1.52c.25-.58.38-1.22.38-1.9 0-.68-.13-1.31-.38-1.9-.25-.58-.61-1.09-1.07-1.52s-1.02-.76-1.67-.99c-.65-.23-1.37-.35-2.16-.35h-3.93v9.54h3.93zM219.35 25.94V.2h4.45v21.25h7v4.49h-11.45zM232.61 25.94V.2h4.49v25.74h-4.49zM252.41 25.94c-1.91 0-3.67-.34-5.26-1.01s-2.96-1.59-4.09-2.77a12.88 12.88 0 0 1-2.66-4.17c-.64-1.61-.96-3.33-.96-5.18 0-1.87.31-3.58.94-5.12.63-1.54 1.51-2.87 2.64-3.98 1.13-1.11 2.5-1.97 4.09-2.59 1.6-.62 3.36-.92 5.3-.92h3.76v4.49h-3.76c-1.23 0-2.37.21-3.42.64a8.266 8.266 0 0 0-2.71 1.77c-.76.75-1.35 1.64-1.78 2.69s-.64 2.17-.64 3.38.21 2.32.63 3.33c.42 1.01 1 1.89 1.75 2.62.75.74 1.65 1.31 2.71 1.71 1.06.41 2.21.61 3.46.61h3.76v4.49h-3.76zM272.68 1.35c.31-.48.69-.83 1.14-1.04.45-.21.92-.31 1.43-.31.57 0 1.03.2 1.37.61.34.41.51.95.51 1.63v23.69h-4.45V8.55l-11.02 17.39h-5.35l16.37-24.59zM289.93 4.69v21.25h-4.49V4.69h-6.57V.2h17.62v4.49h-6.56zM298.18 25.94V.2h4.49v25.74h-4.49zM318.18 25.94c-1.89 0-3.64-.34-5.23-1.01-1.6-.67-2.96-1.6-4.11-2.79a12.727 12.727 0 0 1-2.67-4.18c-.64-1.59-.96-3.32-.96-5.16 0-1.85.31-3.54.94-5.08s1.51-2.87 2.64-3.99c1.13-1.12 2.5-1.99 4.09-2.61 1.59-.62 3.36-.92 5.3-.92h.76c1.96 0 3.73.31 5.33.94 1.6.63 2.96 1.5 4.09 2.62a11.54 11.54 0 0 1 2.62 3.99c.62 1.54.92 3.22.92 5.05 0 1.85-.32 3.57-.96 5.16-.64 1.6-1.53 2.99-2.69 4.18-1.15 1.19-2.52 2.12-4.11 2.79s-3.32 1.01-5.21 1.01h-.75zm0-21.25c-1.23 0-2.37.21-3.4.63-1.03.42-1.93 1-2.69 1.75s-1.35 1.64-1.78 2.67c-.43 1.03-.64 2.18-.64 3.43 0 1.21.21 2.32.63 3.33.42 1.01 1 1.89 1.75 2.62.75.74 1.64 1.31 2.69 1.71 1.04.41 2.19.61 3.45.61h.76c1.28 0 2.44-.21 3.48-.63s1.94-1 2.69-1.73c.75-.74 1.33-1.61 1.73-2.62.41-1.01.61-2.11.61-3.3 0-1.23-.21-2.36-.63-3.4a8.073 8.073 0 0 0-1.77-2.69 7.96 7.96 0 0 0-2.71-1.77c-1.04-.42-2.18-.63-3.42-.63h-.75zM338.67 8.08v17.85h-4.32V2.44c0-.68.19-1.23.56-1.63.37-.41.91-.61 1.62-.61.44 0 .85.09 1.24.28.38.19.78.53 1.17 1.04l12.57 16.53V.2h4.29v23.53c0 1.65-.56 2.47-1.68 2.47-.55 0-1.03-.13-1.45-.38-.42-.25-.88-.64-1.39-1.17L338.67 8.08zM358.87 25.94v-4.49h9.01c1.39 0 2.53-.33 3.43-.99s1.35-1.52 1.35-2.57c0-.53-.12-1.01-.36-1.45-.24-.44-.57-.82-.99-1.14s-.92-.57-1.52-.74c-.59-.18-1.23-.26-1.91-.26h-2.05c-1.06 0-2.04-.17-2.94-.51-.9-.34-1.68-.82-2.34-1.45s-1.18-1.36-1.55-2.21c-.37-.85-.56-1.79-.56-2.82 0-1.01.19-1.95.58-2.81.38-.86.93-1.61 1.63-2.24.7-.64 1.55-1.14 2.54-1.5.99-.36 2.08-.54 3.27-.54h8.55v4.49h-8.78c-.95 0-1.69.26-2.24.78-.55.52-.83 1.14-.83 1.86 0 .79.28 1.45.84 1.98.56.53 1.3.79 2.23.79h2.54c1.14 0 2.2.19 3.17.58.97.39 1.8.93 2.51 1.63.7.7 1.25 1.54 1.65 2.51.4.97.59 2.02.59 3.17 0 1.17-.21 2.23-.63 3.2-.42.97-1.02 1.8-1.8 2.51-.78.7-1.71 1.25-2.79 1.65s-2.28.59-3.6.59h-9z"/>
        </svg>

        <a class="contact-link" href="mailto:nick@addisonapplications.com">Contact</a>
        
    </div>

    <%= yield %>
<!--     <script src="https://webglfundamentals.org/webgl/resources/webgl-utils.js"></script>
    <script src="https://webglfundamentals.org/webgl/resources/m4.js"></script>
    <script src="https://webglfundamentals.org/webgl/resources/primitives.js"></script> -->
  </body>
  <script type="text/javascript">
      function initalizeFunctions() {

        var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);

         var logoContainer = document.querySelector(".logo-container");
         logoContainer.style.width = w + "px";
         logoContainer.style.height = h + "px";

         window.addEventListener("resize", function() {
            var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
            var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
            logoContainer.style.width = w + "px";
            logoContainer.style.height = h + "px";
         });


        // animate logo
        var logoPath = document.getElementById("logo-path");
        logoPath.setAttribute("class", "logo-animation");

        function startTime() {
            var bgContainer = document.querySelector('.logo-container');
            var today = new Date();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            h = checkTime(h);
            m = checkTime(m);
            s = checkTime(s);
            bgColor = "#" + h + m + s;
            console.log(bgColor)
            bgContainer.style.backgroundColor  = bgColor;
            bgContainer.style["boxShadow"]  = "inset 0 0 0 1vw #009696, inset 0 0 0 2vw "+bgColor+", inset 0 0 0 3vw #009696, inset 0 0 0 4vw "+bgColor+", inset 0 0 0 5vw #009696";
            bgContainer.style.backgroundColor  = bgColor;
            var t = setTimeout(startTime, 5000);
        }
        function checkTime(i) {
            if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
            return i;
        }

        startTime()

      }
      // call function on load
      document.addEventListener("DOMContentLoaded", function() {
        initalizeFunctions();
      });
  </script>
</html>





